; Listing generated by Microsoft (R) Optimizing Compiler Version 19.34.31935.0 

include listing.inc

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	_LogMessage
PUBLIC	__local_stdio_printf_options
PUBLIC	_vsnprintf_l
PUBLIC	vsnprintf
PUBLIC	_vsprintf_l
PUBLIC	sprintf
EXTRN	PlatformConsoleWrite:PROC
EXTRN	__stdio_common_vsprintf:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__chkstk:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
pdata	SEGMENT
$pdata$_LogMessage DD imagerel $LN3
	DD	imagerel $LN3+263
	DD	imagerel $unwind$_LogMessage
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsnprintf_l DD imagerel $LN5
	DD	imagerel $LN5+117
	DD	imagerel $unwind$_vsnprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$vsnprintf DD imagerel $LN5
	DD	imagerel $LN5+116
	DD	imagerel $unwind$vsnprintf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vsprintf_l DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$_vsprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sprintf DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$sprintf
pdata	ENDS
_DATA	SEGMENT
$SG120698 DB	'[FATAL]: ', 00H
	ORG $+6
$SG120700 DB	'[ERROR]: ', 00H
	ORG $+6
$SG120702 DB	'[WARN]: ', 00H
	ORG $+3
$SG120709 DB	'%s%s', 0aH, 00H
	ORG $+6
$SG120704 DB	'[INFO]: ', 00H
	ORG $+7
$SG120706 DB	'[DEBUG]: ', 00H
	ORG $+6
$SG120708 DB	'[TRACE]: ', 00H
_DATA	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sprintf DD 011801H
	DD	06218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsprintf_l DD 011801H
	DD	06218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$vsnprintf DD 011801H
	DD	08218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vsnprintf_l DD 011801H
	DD	08218H
xdata	ENDS
voltbl	SEGMENT
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:_LogMessage
	DD	02aH
	DD	0efH
voltbl	ENDS
xdata	SEGMENT
$unwind$_LogMessage DD 023219H
	DD	0100f0120H
	DD	imagerel __GSHandlerCheck
	DD	08060H
xdata	ENDS
; Function compile flags: /Odtp
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
;	COMDAT sprintf
_TEXT	SEGMENT
_Result$ = 32
_ArgList$ = 40
_Buffer$ = 64
_Format$ = 72
sprintf	PROC						; COMDAT

; 1771 :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000f	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 1772 :         int _Result;
; 1773 :         va_list _ArgList;
; 1774 :         __crt_va_start(_ArgList, _Format);

  00018	48 8d 44 24 50	 lea	 rax, QWORD PTR _Format$[rsp+8]
  0001d	48 89 44 24 28	 mov	 QWORD PTR _ArgList$[rsp], rax

; 1775 : 
; 1776 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  00022	4c 8b 4c 24 28	 mov	 r9, QWORD PTR _ArgList$[rsp]
  00027	45 33 c0	 xor	 r8d, r8d
  0002a	48 8b 54 24 48	 mov	 rdx, QWORD PTR _Format$[rsp]
  0002f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Buffer$[rsp]
  00034	e8 00 00 00 00	 call	 _vsprintf_l
  00039	89 44 24 20	 mov	 DWORD PTR _Result$[rsp], eax

; 1777 : 
; 1778 :         __crt_va_end(_ArgList);

  0003d	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR _ArgList$[rsp], 0

; 1779 :         return _Result;

  00046	8b 44 24 20	 mov	 eax, DWORD PTR _Result$[rsp]

; 1780 :     }

  0004a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0004e	c3		 ret	 0
sprintf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
;	COMDAT _vsprintf_l
_TEXT	SEGMENT
_Buffer$ = 64
_Format$ = 72
_Locale$ = 80
_ArgList$ = 88
_vsprintf_l PROC					; COMDAT

; 1458 :     {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 1459 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  00018	48 8b 44 24 58	 mov	 rax, QWORD PTR _ArgList$[rsp]
  0001d	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00022	4c 8b 4c 24 50	 mov	 r9, QWORD PTR _Locale$[rsp]
  00027	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Format$[rsp]
  0002c	48 c7 c2 ff ff
	ff ff		 mov	 rdx, -1
  00033	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _Buffer$[rsp]
  00038	e8 00 00 00 00	 call	 _vsnprintf_l

; 1460 :     }

  0003d	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00041	c3		 ret	 0
_vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
;	COMDAT vsnprintf
_TEXT	SEGMENT
_Result$ = 48
tv74 = 52
_Buffer$ = 80
_BufferCount$ = 88
_Format$ = 96
_ArgList$ = 104
vsnprintf PROC						; COMDAT

; 1438 :     {

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 1439 :         int const _Result = __stdio_common_vsprintf(

  00018	e8 00 00 00 00	 call	 __local_stdio_printf_options
  0001d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00020	48 83 c8 02	 or	 rax, 2
  00024	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00029	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  0002e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00037	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Format$[rsp]
  0003c	4c 8b 44 24 58	 mov	 r8, QWORD PTR _BufferCount$[rsp]
  00041	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Buffer$[rsp]
  00046	48 8b c8	 mov	 rcx, rax
  00049	e8 00 00 00 00	 call	 __stdio_common_vsprintf
  0004e	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1440 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1441 :             _Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1442 : 
; 1443 :         return _Result < 0 ? -1 : _Result;

  00052	83 7c 24 30 00	 cmp	 DWORD PTR _Result$[rsp], 0
  00057	7d 0a		 jge	 SHORT $LN3@vsnprintf
  00059	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR tv74[rsp], -1
  00061	eb 08		 jmp	 SHORT $LN4@vsnprintf
$LN3@vsnprintf:
  00063	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]
  00067	89 44 24 34	 mov	 DWORD PTR tv74[rsp], eax
$LN4@vsnprintf:
  0006b	8b 44 24 34	 mov	 eax, DWORD PTR tv74[rsp]

; 1444 :     }

  0006f	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00073	c3		 ret	 0
vsnprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\stdio.h
;	COMDAT _vsnprintf_l
_TEXT	SEGMENT
_Result$ = 48
tv74 = 52
_Buffer$ = 80
_BufferCount$ = 88
_Format$ = 96
_Locale$ = 104
_ArgList$ = 112
_vsnprintf_l PROC					; COMDAT

; 1391 :     {

$LN5:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 1392 :         int const _Result = __stdio_common_vsprintf(

  00018	e8 00 00 00 00	 call	 __local_stdio_printf_options
  0001d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00020	48 83 c8 01	 or	 rax, 1
  00024	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00029	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  0002e	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _Locale$[rsp]
  00033	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00038	4c 8b 4c 24 60	 mov	 r9, QWORD PTR _Format$[rsp]
  0003d	4c 8b 44 24 58	 mov	 r8, QWORD PTR _BufferCount$[rsp]
  00042	48 8b 54 24 50	 mov	 rdx, QWORD PTR _Buffer$[rsp]
  00047	48 8b c8	 mov	 rcx, rax
  0004a	e8 00 00 00 00	 call	 __stdio_common_vsprintf
  0004f	89 44 24 30	 mov	 DWORD PTR _Result$[rsp], eax

; 1393 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1394 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1395 : 
; 1396 :         return _Result < 0 ? -1 : _Result;

  00053	83 7c 24 30 00	 cmp	 DWORD PTR _Result$[rsp], 0
  00058	7d 0a		 jge	 SHORT $LN3@vsnprintf_
  0005a	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR tv74[rsp], -1
  00062	eb 08		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00064	8b 44 24 30	 mov	 eax, DWORD PTR _Result$[rsp]
  00068	89 44 24 34	 mov	 DWORD PTR tv74[rsp], eax
$LN4@vsnprintf_:
  0006c	8b 44 24 34	 mov	 eax, DWORD PTR tv74[rsp]

; 1397 :     }

  00070	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00074	c3		 ret	 0
_vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.19041.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 91   :         static unsigned __int64 _OptionsStorage;
; 92   :         return &_OptionsStorage;

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 93   :     }

  00007	c3		 ret	 0
__local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File W:\Butterfly\Engine\src\Butterfly\Logger.c
_TEXT	SEGMENT
Written$ = 32
Args$ = 40
LevelStrings$ = 48
Buffer$ = 96
OutBuffer$ = 16480
__$ArrayPad$ = 32864
LogLevel$ = 32896
Format$ = 32904
_LogMessage PROC

; 8    : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00009	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000e	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00013	b8 78 80 00 00	 mov	 eax, 32888		; 00008078H
  00018	e8 00 00 00 00	 call	 __chkstk
  0001d	48 2b e0	 sub	 rsp, rax
  00020	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00027	48 33 c4	 xor	 rax, rsp
  0002a	48 89 84 24 60
	80 00 00	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 9    :     char *LevelStrings[6] =

  00032	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG120698
  00039	48 89 44 24 30	 mov	 QWORD PTR LevelStrings$[rsp], rax
  0003e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG120700
  00045	48 89 44 24 38	 mov	 QWORD PTR LevelStrings$[rsp+8], rax
  0004a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG120702
  00051	48 89 44 24 40	 mov	 QWORD PTR LevelStrings$[rsp+16], rax
  00056	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG120704
  0005d	48 89 44 24 48	 mov	 QWORD PTR LevelStrings$[rsp+24], rax
  00062	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG120706
  00069	48 89 44 24 50	 mov	 QWORD PTR LevelStrings$[rsp+32], rax
  0006e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG120708
  00075	48 89 44 24 58	 mov	 QWORD PTR LevelStrings$[rsp+40], rax

; 10   :     {
; 11   :         "[FATAL]: ",
; 12   :         "[ERROR]: ",
; 13   :         "[WARN]: ",
; 14   :         "[INFO]: ",
; 15   :         "[DEBUG]: ",
; 16   :         "[TRACE]: "
; 17   :     };
; 18   :     
; 19   :     char Buffer[16384];
; 20   :     
; 21   :     va_list Args;
; 22   :     va_start(Args, Format);

  0007a	48 8d 84 24 90
	80 00 00	 lea	 rax, QWORD PTR Format$[rsp+8]
  00082	48 89 44 24 28	 mov	 QWORD PTR Args$[rsp], rax

; 23   :     s32 Written = vsnprintf(Buffer, 16384, Format, Args);

  00087	4c 8b 4c 24 28	 mov	 r9, QWORD PTR Args$[rsp]
  0008c	4c 8b 84 24 88
	80 00 00	 mov	 r8, QWORD PTR Format$[rsp]
  00094	ba 00 40 00 00	 mov	 edx, 16384		; 00004000H
  00099	48 8d 4c 24 60	 lea	 rcx, QWORD PTR Buffer$[rsp]
  0009e	e8 00 00 00 00	 call	 vsnprintf
  000a3	89 44 24 20	 mov	 DWORD PTR Written$[rsp], eax

; 24   :     va_end(Args);

  000a7	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR Args$[rsp], 0

; 25   :     
; 26   :     char OutBuffer[16384];
; 27   :     Written = sprintf(OutBuffer, "%s%s\n", LevelStrings[LogLevel], Buffer);

  000b0	48 63 84 24 80
	80 00 00	 movsxd	 rax, DWORD PTR LogLevel$[rsp]
  000b8	4c 8d 4c 24 60	 lea	 r9, QWORD PTR Buffer$[rsp]
  000bd	4c 8b 44 c4 30	 mov	 r8, QWORD PTR LevelStrings$[rsp+rax*8]
  000c2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG120709
  000c9	48 8d 8c 24 60
	40 00 00	 lea	 rcx, QWORD PTR OutBuffer$[rsp]
  000d1	e8 00 00 00 00	 call	 sprintf
  000d6	89 44 24 20	 mov	 DWORD PTR Written$[rsp], eax

; 28   :     
; 29   :     PlatformConsoleWrite(OutBuffer, LogLevel);

  000da	0f b6 94 24 80
	80 00 00	 movzx	 edx, BYTE PTR LogLevel$[rsp]
  000e2	48 8d 8c 24 60
	40 00 00	 lea	 rcx, QWORD PTR OutBuffer$[rsp]
  000ea	e8 00 00 00 00	 call	 PlatformConsoleWrite

; 30   : }

  000ef	48 8b 8c 24 60
	80 00 00	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000f7	48 33 cc	 xor	 rcx, rsp
  000fa	e8 00 00 00 00	 call	 __security_check_cookie
  000ff	48 81 c4 78 80
	00 00		 add	 rsp, 32888		; 00008078H
  00106	c3		 ret	 0
_LogMessage ENDP
_TEXT	ENDS
END

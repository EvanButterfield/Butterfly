; Listing generated by Microsoft (R) Optimizing Compiler Version 19.34.31935.0 

include listing.inc

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	BInitializePlatform
PUBLIC	BUpdatePlatform
PUBLIC	BPlatformConsoleWrite
PUBLIC	BPlatformAlloc
PUBLIC	BPlatformFree
EXTRN	__imp_GetStdHandle:PROC
EXTRN	__imp_OutputDebugStringA:PROC
EXTRN	__imp_VirtualAlloc:PROC
EXTRN	__imp_VirtualFree:PROC
EXTRN	__imp_GetModuleHandleW:PROC
EXTRN	__imp_TranslateMessage:PROC
EXTRN	__imp_DispatchMessageA:PROC
EXTRN	__imp_PeekMessageA:PROC
EXTRN	__imp_DefWindowProcW:PROC
EXTRN	__imp_RegisterClassW:PROC
EXTRN	__imp_CreateWindowExW:PROC
EXTRN	__imp_LoadCursorW:PROC
EXTRN	__imp_WriteConsoleA:PROC
EXTRN	__imp_SetConsoleTextAttribute:PROC
EXTRN	BLogMessage:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
_BSS	SEGMENT
State	DB	010H DUP (?)
_BSS	ENDS
pdata	SEGMENT
$pdata$BInitializePlatform DD imagerel $LN7
	DD	imagerel $LN7+402
	DD	imagerel $unwind$BInitializePlatform
$pdata$BUpdatePlatform DD imagerel $LN5
	DD	imagerel $LN5+64
	DD	imagerel $unwind$BUpdatePlatform
$pdata$BPlatformConsoleWrite DD imagerel $LN4
	DD	imagerel $LN4+209
	DD	imagerel $unwind$BPlatformConsoleWrite
$pdata$BPlatformAlloc DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$BPlatformAlloc
$pdata$BPlatformFree DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$BPlatformFree
$pdata$Win32WindowProc DD imagerel Win32WindowProc
	DD	imagerel Win32WindowProc+80
	DD	imagerel $unwind$Win32WindowProc
pdata	ENDS
_DATA	SEGMENT
$SG117932 DB	'B', 00H, 'u', 00H, 't', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	'f', 00H, 'l', 00H, 'y', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's', 00H
	DB	's', 00H, 00H, 00H
	ORG $+6
$SG117935 DB	'W:\Butterfly\Butterfly\src\Platform\WinBPlatform.c', 00H
	ORG $+5
$SG117936 DB	'Failed to Register Window Class', 00H
$SG117937 DB	'%s: Assertion failed in file: %s on line: %d', 00H
	ORG $+3
$SG117938 DB	'[Engine]: ', 00H
	ORG $+5
$SG117941 DB	'W:\Butterfly\Butterfly\src\Platform\WinBPlatform.c', 00H
	ORG $+5
$SG117942 DB	'Failed to Create Window', 00H
$SG117943 DB	'%s: Assertion failed in file: %s on line: %d', 00H
	ORG $+3
$SG117944 DB	'[Engine]: ', 00H
	ORG $+5
$SG117945 DB	'Initialized Platform', 00H
	ORG $+3
$SG117946 DB	'[Engine]: ', 00H
_DATA	ENDS
voltbl	SEGMENT
_volmd	DD	0ffffffffH
	DDSymXIndex: 	FLAT:BPlatformConsoleWrite
	DD	017H
	DD	0bfH
voltbl	ENDS
xdata	SEGMENT
$unwind$BInitializePlatform DD 030d01H
	DD	018010dH
	DD	07006H
$unwind$BUpdatePlatform DD 010401H
	DD	0c204H
$unwind$BPlatformConsoleWrite DD 011c19H
	DD	0c20dH
	DD	imagerel __GSHandlerCheck
	DD	058H
$unwind$BPlatformAlloc DD 010901H
	DD	06209H
$unwind$BPlatformFree DD 010e01H
	DD	0420eH
$unwind$Win32WindowProc DD 011701H
	DD	06217H
xdata	ENDS
; Function compile flags: /Odtp
; File W:\Butterfly\Butterfly\src\Platform\WinBPlatform.c
_TEXT	SEGMENT
tv64 = 32
Result$ = 40
Window$ = 64
Message$ = 72
WParam$ = 80
LParam$ = 88
Win32WindowProc PROC

; 15   : {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 16   :     LRESULT Result = 0;

  00017	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR Result$[rsp], 0

; 17   :     
; 18   :     switch(Message)

  00020	8b 44 24 48	 mov	 eax, DWORD PTR Message$[rsp]
  00024	89 44 24 20	 mov	 DWORD PTR tv64[rsp], eax

; 19   :     {
; 20   :         default:
; 21   :         {
; 22   :             Result = DefWindowProc(Window, Message, WParam, LParam);

  00028	4c 8b 4c 24 58	 mov	 r9, QWORD PTR LParam$[rsp]
  0002d	4c 8b 44 24 50	 mov	 r8, QWORD PTR WParam$[rsp]
  00032	8b 54 24 48	 mov	 edx, DWORD PTR Message$[rsp]
  00036	48 8b 4c 24 40	 mov	 rcx, QWORD PTR Window$[rsp]
  0003b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DefWindowProcW
  00041	48 89 44 24 28	 mov	 QWORD PTR Result$[rsp], rax

; 23   :         } break;
; 24   :     }
; 25   :     
; 26   :     return(Result);

  00046	48 8b 44 24 28	 mov	 rax, QWORD PTR Result$[rsp]

; 27   : }

  0004b	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0004f	c3		 ret	 0
Win32WindowProc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File W:\Butterfly\Butterfly\src\Platform\WinBPlatform.c
_TEXT	SEGMENT
Memory$ = 48
Size$ = 56
BPlatformFree PROC

; 87   : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 88   :     VirtualFree(Memory, Size, MEM_RELEASE);

  0000e	41 b8 00 80 00
	00		 mov	 r8d, 32768		; 00008000H
  00014	48 8b 54 24 38	 mov	 rdx, QWORD PTR Size$[rsp]
  00019	48 8b 4c 24 30	 mov	 rcx, QWORD PTR Memory$[rsp]
  0001e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_VirtualFree

; 89   : }

  00024	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00028	c3		 ret	 0
BPlatformFree ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File W:\Butterfly\Butterfly\src\Platform\WinBPlatform.c
_TEXT	SEGMENT
Memory$ = 32
Size$ = 64
BPlatformAlloc PROC

; 81   : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 82   :     void *Memory = VirtualAlloc(0, Size, MEM_COMMIT|MEM_RESERVE, PAGE_READWRITE);

  00009	41 b9 04 00 00
	00		 mov	 r9d, 4
  0000f	41 b8 00 30 00
	00		 mov	 r8d, 12288		; 00003000H
  00015	48 8b 54 24 40	 mov	 rdx, QWORD PTR Size$[rsp]
  0001a	33 c9		 xor	 ecx, ecx
  0001c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_VirtualAlloc
  00022	48 89 44 24 20	 mov	 QWORD PTR Memory$[rsp], rax

; 83   :     return Memory;

  00027	48 8b 44 24 20	 mov	 rax, QWORD PTR Memory$[rsp]

; 84   : }

  0002c	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00030	c3		 ret	 0
BPlatformAlloc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File W:\Butterfly\Butterfly\src\Platform\WinBPlatform.c
_TEXT	SEGMENT
tv83 = 48
Length$ = 56
Console$ = 64
tv82 = 72
Levels$ = 80
__$ArrayPad$ = 88
Message$ = 112
Color$ = 120
BPlatformConsoleWrite PROC

; 69   : {

$LN4:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 68	 sub	 rsp, 104		; 00000068H
  0000d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00014	48 33 c4	 xor	 rax, rsp
  00017	48 89 44 24 58	 mov	 QWORD PTR __$ArrayPad$[rsp], rax

; 70   :     HANDLE Console = GetStdHandle(STD_OUTPUT_HANDLE);

  0001c	b9 f5 ff ff ff	 mov	 ecx, -11		; fffffff5H
  00021	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetStdHandle
  00027	48 89 44 24 40	 mov	 QWORD PTR Console$[rsp], rax

; 71   :     
; 72   :     u8 Levels[6] = {64, 4, 6, 2, 1, 8};

  0002c	c6 44 24 50 40	 mov	 BYTE PTR Levels$[rsp], 64 ; 00000040H
  00031	c6 44 24 51 04	 mov	 BYTE PTR Levels$[rsp+1], 4
  00036	c6 44 24 52 06	 mov	 BYTE PTR Levels$[rsp+2], 6
  0003b	c6 44 24 53 02	 mov	 BYTE PTR Levels$[rsp+3], 2
  00040	c6 44 24 54 01	 mov	 BYTE PTR Levels$[rsp+4], 1
  00045	c6 44 24 55 08	 mov	 BYTE PTR Levels$[rsp+5], 8

; 73   :     SetConsoleTextAttribute(Console, Levels[Color]);

  0004a	0f b6 44 24 78	 movzx	 eax, BYTE PTR Color$[rsp]
  0004f	0f b6 44 04 50	 movzx	 eax, BYTE PTR Levels$[rsp+rax]
  00054	0f b7 d0	 movzx	 edx, ax
  00057	48 8b 4c 24 40	 mov	 rcx, QWORD PTR Console$[rsp]
  0005c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_SetConsoleTextAttribute

; 74   :     
; 75   :     OutputDebugStringA(Message);

  00062	48 8b 4c 24 70	 mov	 rcx, QWORD PTR Message$[rsp]
  00067	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_OutputDebugStringA

; 76   :     DWORD Length = (DWORD)strlen(Message);

  0006d	48 8b 44 24 70	 mov	 rax, QWORD PTR Message$[rsp]
  00072	48 89 44 24 48	 mov	 QWORD PTR tv82[rsp], rax
  00077	48 c7 44 24 30
	ff ff ff ff	 mov	 QWORD PTR tv83[rsp], -1
$LL3@BPlatformC:
  00080	48 ff 44 24 30	 inc	 QWORD PTR tv83[rsp]
  00085	48 8b 44 24 48	 mov	 rax, QWORD PTR tv82[rsp]
  0008a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv83[rsp]
  0008f	80 3c 08 00	 cmp	 BYTE PTR [rax+rcx], 0
  00093	75 eb		 jne	 SHORT $LL3@BPlatformC
  00095	48 8b 44 24 30	 mov	 rax, QWORD PTR tv83[rsp]
  0009a	89 44 24 38	 mov	 DWORD PTR Length$[rsp], eax

; 77   :     WriteConsoleA(Console, Message, Length, 0, 0);

  0009e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000a7	45 33 c9	 xor	 r9d, r9d
  000aa	44 8b 44 24 38	 mov	 r8d, DWORD PTR Length$[rsp]
  000af	48 8b 54 24 70	 mov	 rdx, QWORD PTR Message$[rsp]
  000b4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR Console$[rsp]
  000b9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_WriteConsoleA

; 78   : }

  000bf	48 8b 4c 24 58	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  000c4	48 33 cc	 xor	 rcx, rsp
  000c7	e8 00 00 00 00	 call	 __security_check_cookie
  000cc	48 83 c4 68	 add	 rsp, 104		; 00000068H
  000d0	c3		 ret	 0
BPlatformConsoleWrite ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File W:\Butterfly\Butterfly\src\Platform\WinBPlatform.c
_TEXT	SEGMENT
Message$ = 48
BUpdatePlatform PROC

; 59   : {

$LN5:
  00000	48 83 ec 68	 sub	 rsp, 104		; 00000068H
$LN2@BUpdatePla:

; 60   :     MSG Message;
; 61   :     while(PeekMessageA(&Message, 0, 0, 0, PM_REMOVE))

  00004	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR [rsp+32], 1
  0000c	45 33 c9	 xor	 r9d, r9d
  0000f	45 33 c0	 xor	 r8d, r8d
  00012	33 d2		 xor	 edx, edx
  00014	48 8d 4c 24 30	 lea	 rcx, QWORD PTR Message$[rsp]
  00019	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_PeekMessageA
  0001f	85 c0		 test	 eax, eax
  00021	74 18		 je	 SHORT $LN3@BUpdatePla

; 62   :     {
; 63   :         TranslateMessage(&Message);

  00023	48 8d 4c 24 30	 lea	 rcx, QWORD PTR Message$[rsp]
  00028	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_TranslateMessage

; 64   :         DispatchMessageA(&Message);

  0002e	48 8d 4c 24 30	 lea	 rcx, QWORD PTR Message$[rsp]
  00033	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_DispatchMessageA

; 65   :     }

  00039	eb c9		 jmp	 SHORT $LN2@BUpdatePla
$LN3@BUpdatePla:

; 66   : }

  0003b	48 83 c4 68	 add	 rsp, 104		; 00000068H
  0003f	c3		 ret	 0
BUpdatePlatform ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File W:\Butterfly\Butterfly\src\Platform\WinBPlatform.c
_TEXT	SEGMENT
BaseAddress$ = 96
WindowClass$ = 112
WindowName$ = 208
BInitializePlatform PROC

; 30   : {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	57		 push	 rdi
  00006	48 81 ec c0 00
	00 00		 sub	 rsp, 192		; 000000c0H

; 31   : #ifdef BTF_DEBUG
; 32   :     LPVOID BaseAddress = (LPVOID)Tebibytes(2);

  0000d	48 b8 00 00 00
	00 00 02 00 00	 mov	 rax, 2199023255552	; 0000020000000000H
  00017	48 89 44 24 60	 mov	 QWORD PTR BaseAddress$[rsp], rax

; 33   : #else
; 34   :     LPVOID BaseAddress = 0;
; 35   : #endif
; 36   :     
; 37   :     State.Instance = GetModuleHandle(0);

  0001c	33 c9		 xor	 ecx, ecx
  0001e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_GetModuleHandleW
  00024	48 89 05 00 00
	00 00		 mov	 QWORD PTR State, rax

; 38   :     
; 39   :     WNDCLASSW WindowClass = {0};

  0002b	48 8d 44 24 70	 lea	 rax, QWORD PTR WindowClass$[rsp]
  00030	48 8b f8	 mov	 rdi, rax
  00033	33 c0		 xor	 eax, eax
  00035	b9 48 00 00 00	 mov	 ecx, 72			; 00000048H
  0003a	f3 aa		 rep stosb

; 40   :     WindowClass.style = CS_HREDRAW|CS_VREDRAW;

  0003c	c7 44 24 70 03
	00 00 00	 mov	 DWORD PTR WindowClass$[rsp], 3

; 41   :     WindowClass.lpfnWndProc = Win32WindowProc;

  00044	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:Win32WindowProc
  0004b	48 89 44 24 78	 mov	 QWORD PTR WindowClass$[rsp+8], rax

; 42   :     WindowClass.hInstance = State.Instance;

  00050	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR State
  00057	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR WindowClass$[rsp+24], rax

; 43   :     WindowClass.hCursor = LoadCursorW(0, IDC_ARROW);

  0005f	ba 00 7f 00 00	 mov	 edx, 32512		; 00007f00H
  00064	33 c9		 xor	 ecx, ecx
  00066	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_LoadCursorW
  0006c	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR WindowClass$[rsp+40], rax

; 44   :     WindowClass.lpszClassName = L"ButterflyWindowClass";

  00074	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117932
  0007b	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR WindowClass$[rsp+64], rax

; 45   :     
; 46   :     BASSERT(RegisterClassW(&WindowClass), "Failed to Register Window Class");

  00083	48 8d 4c 24 70	 lea	 rcx, QWORD PTR WindowClass$[rsp]
  00088	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_RegisterClassW
  0008e	0f b7 c0	 movzx	 eax, ax
  00091	85 c0		 test	 eax, eax
  00093	74 02		 je	 SHORT $LN2@BInitializ
  00095	eb 31		 jmp	 SHORT $LN3@BInitializ
$LN2@BInitializ:
  00097	c7 44 24 28 2e
	00 00 00	 mov	 DWORD PTR [rsp+40], 46	; 0000002eH
  0009f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117935
  000a6	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000ab	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:$SG117936
  000b2	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG117937
  000b9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117938
  000c0	33 c9		 xor	 ecx, ecx
  000c2	e8 00 00 00 00	 call	 BLogMessage
  000c7	cc		 int	 3
$LN3@BInitializ:

; 47   :     
; 48   :     State.Window = CreateWindowW(WindowClass.lpszClassName, WindowName,

  000c8	48 c7 44 24 58
	00 00 00 00	 mov	 QWORD PTR [rsp+88], 0
  000d1	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR State
  000d8	48 89 44 24 50	 mov	 QWORD PTR [rsp+80], rax
  000dd	48 c7 44 24 48
	00 00 00 00	 mov	 QWORD PTR [rsp+72], 0
  000e6	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR [rsp+64], 0
  000ef	c7 44 24 38 00
	00 00 80	 mov	 DWORD PTR [rsp+56], -2147483648 ; ffffffff80000000H
  000f7	c7 44 24 30 00
	00 00 80	 mov	 DWORD PTR [rsp+48], -2147483648 ; ffffffff80000000H
  000ff	c7 44 24 28 00
	00 00 80	 mov	 DWORD PTR [rsp+40], -2147483648 ; ffffffff80000000H
  00107	c7 44 24 20 00
	00 00 80	 mov	 DWORD PTR [rsp+32], -2147483648 ; ffffffff80000000H
  0010f	41 b9 00 00 cf
	10		 mov	 r9d, 282001408		; 10cf0000H
  00115	4c 8b 84 24 d0
	00 00 00	 mov	 r8, QWORD PTR WindowName$[rsp]
  0011d	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR WindowClass$[rsp+64]
  00125	33 c9		 xor	 ecx, ecx
  00127	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_CreateWindowExW
  0012d	48 89 05 08 00
	00 00		 mov	 QWORD PTR State+8, rax

; 49   :                                  WS_OVERLAPPEDWINDOW|WS_VISIBLE,
; 50   :                                  CW_USEDEFAULT, CW_USEDEFAULT,
; 51   :                                  CW_USEDEFAULT, CW_USEDEFAULT,
; 52   :                                  0, 0, State.Instance, 0);
; 53   :     BASSERT(State.Window, "Failed to Create Window");

  00134	48 83 3d 08 00
	00 00 00	 cmp	 QWORD PTR State+8, 0
  0013c	74 02		 je	 SHORT $LN4@BInitializ
  0013e	eb 31		 jmp	 SHORT $LN5@BInitializ
$LN4@BInitializ:
  00140	c7 44 24 28 35
	00 00 00	 mov	 DWORD PTR [rsp+40], 53	; 00000035H
  00148	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:$SG117941
  0014f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00154	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:$SG117942
  0015b	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG117943
  00162	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117944
  00169	33 c9		 xor	 ecx, ecx
  0016b	e8 00 00 00 00	 call	 BLogMessage
  00170	cc		 int	 3
$LN5@BInitializ:

; 54   :     
; 55   :     BTRACE("Initialized Platform");

  00171	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:$SG117945
  00178	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:$SG117946
  0017f	b9 05 00 00 00	 mov	 ecx, 5
  00184	e8 00 00 00 00	 call	 BLogMessage

; 56   : }

  00189	48 81 c4 c0 00
	00 00		 add	 rsp, 192		; 000000c0H
  00190	5f		 pop	 rdi
  00191	c3		 ret	 0
BInitializePlatform ENDP
_TEXT	ENDS
END
